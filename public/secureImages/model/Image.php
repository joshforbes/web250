<?php

class Image {

    protected static $table = 'images';

    public $id;

    /**
     * Image path
     *
     * @var string
     */
    public $path;

    /**
     * date the model was created - auto generated by MySQL
     *
     * @var string
     */
    public $date;

    /**
     * create a new Model instance based on array data
     *
     * @param PDO $connection
     * @param array $data
     */
    public function __construct(\PDO $connection, array $data)
    {
        $this->connection = $connection;
        $this->id = isset($data['id'])
            ? (int) $data['id']
            : null;

        $this->path = $data['path'];
        $this->date = isset($data['date'])
            ? (int) $data['date']
            : null;
    }

    /**
     * searches database for a record that matches specified id
     *
     * @param  PDO    $connection
     * @param  string $id
     * @return Model|false new Model instance or false
     *
     */
    public static function find(\PDO $connection, $id)
    {
        try {
            $query = $connection->prepare("SELECT * from ".static::$table." WHERE id = :id LIMIT 1");
            $query->bindParam(':id', $id);
            $query->execute();
            return ($query->rowCount() === 1)
                ? new static($connection, $query->fetch(\PDO::FETCH_ASSOC))
                : false;
        } catch (\PDOException $e) {
            return false;
        }
    }


    /**
     * searches database and returns all instances of child Model
     *
     * @param  PDO     $connection
     * @param  string  $orderBy defaults to date DESC
     * @return Model|false returns an array of Model instances or false
     *
     */
    public static function findAll(\PDO $connection, $orderBy = 'date DESC')
    {
        try {
            $query = $connection->prepare("SELECT * FROM " .self::$table. " ORDER BY " . $orderBy);
            $query->execute();
            //$results = [];
            while ($result = $query->fetch(\PDO::FETCH_ASSOC) ) {
                $result = new static($connection, $result);
                $results[] = $result;
            }
            return (isset($results) && count($results) >= 1)
                ? $results
                : null;
        } catch (\PDOException $e) {
            return false;
        }
    }

    /**
     * insert a new Image instance into the database
     *
     * @return true|false indicates whether Article was successfully inserted
     *
     * @throws Exception if Article fails to insert - routes to errorController
     */
    public function insert()
    {
        try
        {
            $query = $this->connection->prepare("INSERT INTO " . self::$table . " (path) VALUES (:path)");
            $query->bindParam(':path', $this->path);
            $query->execute();
            $this->id = $this->connection->lastInsertId();

            return true;
        } catch (\PDOException $e)
        {
            return false;
        }
    }

    /**
     * removes this instance of the Image from the database
     * @return true|false
     */
    public function delete()
    {
        try {
            $query = $this->connection->prepare("DELETE FROM ".static::$table." WHERE id=:id LIMIT 1");
            $query->bindParam(':id', $this->id);
            $query->execute();
        } catch (PDOException $e) {
            return false;
        }

    }

}
